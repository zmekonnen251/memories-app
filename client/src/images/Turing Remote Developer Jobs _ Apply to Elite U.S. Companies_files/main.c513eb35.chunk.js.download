/*! For license information please see main.c513eb35.chunk.js.LICENSE.txt */
(window.webpackJsonp=window.webpackJsonp||[]).push([[30],{111:function(n,e,t){"use strict";t.d(e,"a",(function(){return S}));var r=t(65),a=t.n(r),i=t(109),o=t(79),s=t(80),l=t(99),u=t(81),c=t(204),d=t(150),_=function(){function n(){Object(o.a)(this,n)}return Object(s.a)(n,[{key:"to",value:function(){var n=Object(i.a)(a.a.mark((function n(e,t){var r;return a.a.wrap((function(n){for(;;)switch(n.prev=n.next){case 0:return n.next=2,E(e,t);case 2:r=n.sent,l.a.push(r);case 4:case"end":return n.stop()}}),n)})));return function(e,t){return n.apply(this,arguments)}}()}]),n}(),E=function(){var n=Object(i.a)(a.a.mark((function n(e,t){var r,i,o,s;return a.a.wrap((function(n){for(;;)switch(n.prev=n.next){case 0:r=e,i=function(n,e){r=n||e},n.t0=e,n.next=n.t0===u.PageConstant.PROFILE_ONBOARDING?5:12;break;case 5:return o={action:"CHECK_PROFILE_COMPLETED_V2",endpoint:"challenge"},n.next=8,Object(c.a)({fetchAction:o},{});case 8:return s=n.sent,Object(d.a)(["data","result",0,"result"],s)&&i(t,u.PageConstant.DASHBOARD_DEV),n.abrupt("break",14);case 12:return t&&i(t,u.PageConstant.DASHBOARD_DEV),n.abrupt("break",14);case 14:return n.abrupt("return",r);case 15:case"end":return n.stop()}}),n)})));return function(e,t){return n.apply(this,arguments)}}(),S=new _},149:function(n,e,t){"use strict";t.d(e,"b",(function(){return r})),t.d(e,"a",(function(){return s}));var r={LCI_SETUP_ROOT:"lci_setup",LCI_LIVE_CODE:"lci_live"},a="liveCodingAdmin",i="checkAccess",o="challenge",s={BASE_URL:"https://developers.turing.com/api/",LC_STATE:{INIT:"init",STARTED:"started",CANCELLED:"cancelled",ENDED:"ended"},LOGIN:"/login",LIVE_CODE_ACCESS:"/live/access",LIVE_CODE_CHALLENGE:"/live/code",LIVE_CODE_ACCESS_ADMIN:"/admin/live/access",LIVE_CODE_MONITORING:"/admin/live/monitoring",LIVE_CODE_SETUP:"/admin/live/setup",ADMIN_LOGIN:"/admin/login",DEVELOPER_DASHBOARD:"/home/dashboard",getInterviewList:{action:"GET_INTERVIEWER_LIST",endpoint:a,admin:!0},getCodeMCQList:{action:"GET_ALL_CODE_MCQ",endpoint:a,admin:!0},searchCandidates:{action:"SEARCH_CANDIDATES",endpoint:a,admin:!0},getLCICandidateInfo:{action:"GET_LCI_CANDIDATE_INFO",endpoint:a,admin:!0},createLCI:{action:"CREATE_LCI",endpoint:a,admin:!0},sendLCIAccessCode:{action:"SEND_LCI_ACCESS_CODE",endpoint:a,admin:!0},updateLCI:{action:"UPDATE_LCI",endpoint:a,admin:!0},lciListing:{action:"GET_LCI_LISTING",endpoint:a,admin:!0},startLCI:{action:"START_LCI",endpoint:a,admin:!0},getAllCandidatesForLCI:{action:"GET_ALL_CANDIDATES_FOR_LCI",endpoint:a,admin:!0},endLCI:{action:"END_LCI",endpoint:a,admin:!0},cancelLCI:{action:"CANCEL_LCI",endpoint:a,admin:!0},checkAccessCode:{action:"CHECK_ACCESS_CODE",endpoint:i},getProgrammingLanguage:{action:"GET_PROGRAMMING_LANGUAGE",endpoint:"common"},getChallengeWithProblem:{action:"GET_CHALLENGE_WITH_PROBLEM",endpoint:o},getProblemForChallenge:{action:"GET_PROBLEM_FOR_CHALLENGE",endpoint:o},addTrackChallenge:{action:"ADD_TRACK_CHALLENGE",endpoint:o},checkAccessCodeInterviewer:{action:"CHECK_ACCESS_CODE_INTERVIEWER",endpoint:i},submitNote:{action:"SUBMIT_NOTE",endpoint:a,admin:!0},getLatestSubmitInfo:{action:"GET_LATEST_SUBMIT_INFO",endpoint:a,admin:!0},getLatestSubmitInfoCandidate:{action:"GET_LATEST_SUBMIT_INFO",endpoint:o},endLCIForUser:{action:"SUBMIT_LCI_CODE_FOR_USER",endpoint:a,admin:!0}}},150:function(n,e,t){"use strict";t.d(e,"a",(function(){return r}));var r=function(n,e){return n.reduce((function(n,e){return n&&n[e]?n[e]:null}),e)}},153:function(n,e,t){"use strict";e.a={ANSWER_1:"NUM = MAX_NUM",ANSWER_2:"MAX_NUM += 1",ANSWER_3:"MAX_NUM = NUM",ANSWER_4:"MAX_NUM += NUM",NO_ANSWER:"I DON'T KNOW PROGRAMMING",PROFESSION_ENGG:"I am a software engineer",PROFESSION_NOT_ENGG:"I am not a software engineer"}},154:function(n,e,t){"use strict";t(203).config();var r={BASE_URL:"https://developers.turing.com/api/",CHALLENGE_BASE_URL:"https://developers.turing.com/api/",CHALLENGE_SOURCE_PATH:"https://developers.turing.com/public/sourcecode/",CHALLENGE_LOG_FILE_PATH:"https://developers.turing.com/public/log/",ADD_AGENT_INFO:"landingpage/add-agent-info",ADD_AGENT_DATA:"landingpage/add-agent-data",SAVE_JAVASCRIPT_TEST_TYPE:"board/save-javascript-test-type",SAVE_SELECTED_LANGUAGE:"board/save-selected-language",SAVE_TEST_RESULT:"board/save-test-result",SAVE_TEST_RESPONSE_TIME:"board/save-test-response-time",SIGNUP:"auth/signup",SIGNIN:"auth/login",LOG_FOR_SOCIAL:"auth/log-for-social",SIGNIN_GOOGLE:"social-auth/google/login",SAVE_GOOGLE:"social-auth/google/save",SIGNIN_FACEBOOK:"social-auth/facebook/login",SAVE_FACEBOOK:"social-auth/facebook/save",SAVE_REMOTE_EXP_INFO:"submit/save-remote-exp-info",SAVE_ENGLISH_EXP_INFO:"submit/save-user-exp-info",GET_REMOTE_EXP_INFO:"submit/get-remote-exp-info",SAVE_PROFILE_INFO:"submit/save-profile-info",GET_PROFILE_INFO:"submit/get-profile-info",SAVE_NOTDEV_PROFILE_INFO:"submit/save-notdev-profile-info",GET_NOTDEV_PROFILE_INFO:"submit/get-notdev-profile-info",SAVE_RESUME_FILE:"submit/save-resume",SAVE_RESUME_INFO:"submit/save-resume-info",GET_RESUME_INFO:"submit/get-resume-info",SAVE_HOME_CHALLENGE_OPTION:"submit/save-home-challenge-option",GET_REDIRECT_URL:"auth/get-redirect-url",GET_MAIL_REDIRECT_URL:"auth/get-mail-token-redirect-url",GET_BASE_JOBS_INFO:"submit/get-base-jobs-info",SAVE_JOBS_INFO:"submit/save-jobs-info",GET_JOBS_SKILLS_INFO:"submit/get-jobs-skills-info",GET_BASE_SKILLS_INFO:"submit/get-base-skills-info",SAVE_SKILLS_INFO:"submit/save-skills-info",GET_PERSONAL_DATA:"dashboard/get-personal-data",GET_ALL_USER_PROFILE_DATA:"dashboard/get-all-user-profile-data",GET_USER_PROJECT_SCREENSHOTS:"dashboard/get-user-project-screenshots",GET_ALL_BASE_PROFILE_DATA:"dashboard/get-all-base-profile-data",SAVE_DEVELOPER_AVAILABILITY:"dashboard/save-developer-availability",SAVE_NEW_AVAILABILITY_ANSWER:"dashboard/save-dev-availability",GET_DEVELOPER_AVAILABILITY_STATUSES:"dashboard/get-developer-availability-statuses",UPDATE_PROFILE_INFO:"dashboard/update-profile-info",UPDATE_PROFILE_DATA:"dashboard/update-profile-data",SAVE_PERSONAL_INFO:"dashboard/save-personal-info",UPDATE_PROFILE_UPDATE_DATE:"dashboard/update-profile-update-date",GET_PROFILE_UPDATE_DATE:"dashboard/get-profile-update-date",GET_COMPENSATION:"dashboard/get-compensation",GET_RECOMMENDED_TESTS:"dashboard/get-recommended-tests",SAVE_RESUME:"dashboard/save-resume",GET_TURING_RESUME_LINK:"dashboard/get-turing-resume-link",SAVE_AVATAR:"dashboard/save-avatar",DELETE_AVATAR:"dashboard/delete-avatar",GET_SYSTEM_DESIGN_INFO:"dashboard/get-system-design",SAVE_SYSTEM_DESIGN_INFO:"dashboard/save-system-design",GET_PRODUCT_DESIGN_INFO:"dashboard/get-product-design",SAVE_PRODUCT_DESIGN_INFO:"dashboard/save-product-design",UPLOAD_DESIGN_CHALLENGE_OPTION_SUBMISSION:"challenge/upload-design-challenge",SAVE_EXPERIENCE_INFO:"dashboard/save-experience",SAVE_PROJECT_INFO:"dashboard/save-project",UPLOAD_SCREENSHOT:"dashboard/upload-screenshot",SAVE_PROJECTS_CHANGES:"dashboard/save-projects-changes",SAVE_EDUCATION_CHANGES:"dashboard/save-education-changes",SAVE_PUBLICATIONS_CHANGES:"dashboard/save-publications-changes",SAVE_CERTIFICATIONS_CHANGES:"dashboard/save-certifications-changes",SAVE_EDUCATION_INFO:"dashboard/save-education",SAVE_CERTIFICATION_INFO:"dashboard/save-certification",SAVE_TECHSKILLS_INFO:"dashboard/save-technical-skills",UPDATE_DEVELOPER_SKILLS:"dashboard/update-developer-skills",SAVE_PUBLICATION_INFO:"dashboard/save-publication",UPDATE_EXPERIENCE_INFO:"dashboard/edit-experience",UPDATE_PROJECT_INFO:"dashboard/edit-project",UPDATE_EDUCATION_INFO:"dashboard/edit-education",UPDATE_CERTIFICATION_INFO:"dashboard/edit-certification",UPDATE_TECHSKILLS_INFO:"dashboard/edit-technical-skills",UPDATE_PUBLICATION_INFO:"dashboard/edit-publication",DELETE_EXPERIENCE_INFO:"dashboard/delete-experience",DELETE_PROJECT_INFO:"dashboard/delete-project",DELETE_EDUCATION_INFO:"dashboard/delete-education",DELETE_CERTIFICATION_INFO:"dashboard/delete-certification",DELETE_TECHSKILLS_INFO:"dashboard/delete-technical-skills",DELETE_PUBLICATION_INFO:"dashboard/delete-publication",GET_BASE_ALL_SKILLS_INFO:"submit/get-base-all-skills-info",SAVE_LINKEDIN_DATA:"social-auth/linkedin/save",SAVE_LINKEDIN_STATUS:"social-auth/linkedin/status",REDIRECT_LINKEDIN_OAUTH:"social-auth/linkedin/oauth",REDIRECT_LINKEDIN_CALLBACK:"social-auth/linkedin/callback",CHANGE_PASSWORD:"dashboard/change-password",CHANGE_EMAIL:"dashboard/change-email",GET_ACCOUNT_INFO:"dashboard/get-account-info",GET_TEST_RESULT:"dashboard/get-test-result",GET_CONTACT_LIST:"general/get-contact-list",SAVE_GITHUB_DATA:"social-auth/github/save",SEND_FORGOT_PASS_EMAIL:"cli/send-forgot-pass",RESET_PASS:"auth/reset-pass",UNSUBSCRIBE:"auth/unsubscribe",UNSUBSCRIBE_TURING_EMAIL:"auth/unsubscribe-turing-email",LOGOUT:"auth/logout",Delete_Account:"dashboard/delete-account",SAVE_MAIL_LIST:"mail/save-mail-list",MAIL_VALIDATION:"mail/validation",GET_FAKE_EMAILS:"mail/get-fake-emails",GET_ALL_EMAILS:"mail/get-all-emails",MAIL_SEND_TEST_EMAIL:"mail/send-test-email",MAIL_SEND_EMAIL:"mail/send-email",GET_VISIT_HISTORY:"general/get-visit-history",GET_SELECTED_LANGUAGE:"submit/get-selected-language",SIGNIN_ADMIN:"auth/admin/login",GET_CHALLENGE_TYPE:"dashboard/get_challenge_type",GET_CHALLENGE_Info:"dashboard/get_challenge_info",GET_HOST_LINK:"dashboard/get_host_link",GET_AUTOHOST_BUILD_STATUS:"dashboard/get_autohost_build_status",GET_CHALLENGE_LIST:"general/get-challenge-list",GET_CHALLENGE_LOG_LIST:"general/get-challenge-log-list",GET_CHALLENGE_TOP_ERRORS:"general/get-challenge-top-errors",SEND_EMAIL_TO_MANAGER:"dashboard/send-email-to-manager",UNLOCK_CHALLENGE:"submit/unlock-challenge",SAVE_SHOW_DESCRIPTION_TRACK:"dashboard/save-show-description-track",SAVE_FRONTEND_CHALLENGE_VISIT:"visitor/saveVisitorInfo",SAVE_INVITATION_RESPONSE:"visitor/saveInvitationResponse",SEND_INVITATION_EMAIL:"visitor/sendInvitaionEmail",GET_SEND_GRID_STATS:"stats/get-sendgrid",GET_CHALLENGE_STATS:"stats/get-challenge",GET_INVITATION_EMAIL_STATS:"stats/get-invitationEmail",GET_SEND_GRID_DEVICE_STATS:"stats/get-sendGridDevices",GET_SEND_GRID_MAILBOX_PROVIDER_STATS:"stats/get-sendGridMailboxProvider",GET_SEND_GRID_ALL_MAILBOX_PROVIDERS_STATS:"stats/get-sendGridAllMailboxProviders",GET_MAILGUN_STATS:"stats/get-mailgun",GET_MAILGUN_DEVICE_STATS:"stats/get-mailgunDevices",GET_MAILGUN_MAILBOX_PROVIDER_STATS:"stats/get-mailgunMailboxProvider",SAVE_CLICK_ANALYTICS:"visitor/saveClickAnalytics",GET_TURING_DEVICE_STATS:"stats/get-turingDevices",CHECK_ADMIN_TOKEN_VALIDATION:"auth/admin/check_validation",UPLOAD_COVER_IMAGE:"challenge/upload-cover-image",UPLOAD_ICON_IMAGE:"challenge/upload-icon-image",CREATE_SERVICE_ACCOUNT:"user/admin/create-service-account",GET_SERVICE_ACCOUNTS:"user/admin/get-service-accounts",DELETE_SERVICE_ACCOUNT:"user/admin/delete-service-account",GET_USER_SIGNUP_FUNNEL_INFO:"submit/get-user-signup-funnel-info",GET_DEVELOPER_SKILL_INFO:"user/get-developer-skill-info",UPDATE_USER_DEMAND_STACK_SKILLS:"user/update-user-demand-stack-skills",UPDATE_USER_SKILL_DATA:"user/update-user-skill-data",ADD_USER_SKILL_DATA:"user/add-user-skill-data",DELETE_USER_SKILL_DATA:"user/delete-user-skill-data",GET_CURRENCY_RATE_LIST:"dashboard/get-currency-rate-list",GET_PARSED_RESUME_DATA:"dashboard/get-parsed-resume-data",GET_USER_AVAILABILITY:"dashboard/get-user-availability",GET_USER_AVAILABILITY_V2:"dashboard/fetch-dev-availability",GET_USER_SIDEBAR_DATA:"dashboard/fetch-sidebar-data",GET_SKILLS_CERTIFICATION:"common-user/",LOGGING_ENDPOINT:"logging/postLog",LOGGING_ENDPOINT_DB:"logging/postLog/db",LOGGING_ENDPOINT_DB_:"logging/postLog/db_",ADD_NEW_ACCOUNT_SETTING:"onboarding/update-account-setting",ONBOARDING:"onboarding",SEND_EMAIL_INVITE:"send_invites",GET_REFERRAL_CODE:"get-refferal-code",IP2COUNTRY:"landingpage/ip2country",GET_RESOURCES:"cms/get-resources",CREATE_RESOURCE:"cms/admin/create-resource",UPDATE_RESOURCE:"cms/admin/update-resource",DELETE_RESOURCE:"cms/admin/delete-resource",UPLOAD_IMAGE:"cms/admin/upload-image"};e.a=r},155:function(n,e,t){"use strict";t.d(e,"a",(function(){return r}));var r=6e4,a={uploadTimeout:r};e.b=a},157:function(n,e,t){"use strict";e.a={PYTHON:"Python",JS:"JavaScript",C:"C"}},163:function(n,e,t){"use strict";e.a={OK:200,CREATED:201,BAD_REQUEST:400,INVALID_INPUT_PARAMS:400,UNAUTHORIZED:401,FORBIDDEN:403,INTERNAL_SERVER_ERROR:500,NOT_IMPLEMENTED:501,BAD_GATEWAY:502,SERVICE_UNAVAILABLE:503,DEPLOY_ERROR:504,UPLOAD_SOLUTION_ONLY:505}},164:function(n,e,t){"use strict";e.a={AUTHENTICATE:"AUTHENTICATE",TOKEN_EXPIRED:"TOKEN_EXPIRED",SHOW_MAX_NUM_AND_SURVEY:"SHOW_MAX_NUM_AND_SURVEY"}},204:function(n,e,t){"use strict";t.d(e,"a",(function(){return s}));var r=t(145),a=t(146),i=t.n(a),o=t(149),s=function(n,e){var t,a=localStorage.getItem("adminToken"),s=localStorage.getItem("token"),l=localStorage.getItem("k"),u=localStorage.getItem("v");n.fetchAction.admin&&a?t={"Content-Type":"application/json",Authorization:a,k:l,v:u}:s&&(t={"Content-Type":"application/json",Authorization:s,k:l,v:u});var c={action:n.fetchAction.action};return i.a.post("".concat(o.a.BASE_URL).concat(n.fetchAction.endpoint),Object(r.a)({},c,e.requestBody),{headers:t})}},231:function(n,e,t){},243:function(n,e,t){},246:function(n,e,t){n.exports=t(539)},486:function(n,e,t){},488:function(n,e,t){},490:function(n,e,t){},492:function(n,e,t){},495:function(n,e,t){},539:function(n,e,t){"use strict";t.r(e);t(247);var r=t(2),a=t.n(r),i=t(143),o=t.n(i),s=t(578),l=t(579),u=t(568),c=t(99),d=t(79),_=t(80),E=t(142),S=t(44),N=t(141),m=t(577),I=t(17),p=function(){return a.a.createElement("div",{style:{textAlign:"center",margin:"auto"}},a.a.createElement("p",{style:{fontSize:"large"}},"\ud83d\ude31 It seems the app cannot load its content, ",a.a.createElement("a",{href:"#",onClick:function(){return window.location.reload()}},"click here to retry")," \ud83d\udc93"))},h=function(n){function e(){var n,t;Object(d.a)(this,e);for(var r=arguments.length,a=new Array(r),i=0;i<r;i++)a[i]=arguments[i];return(t=Object(E.a)(this,(n=Object(S.a)(e)).call.apply(n,[this].concat(a)))).state={error:!1,eventId:null},t}return Object(N.a)(e,n),Object(_.a)(e,[{key:"componentDidCatch",value:function(n,e){var t=this;I.c((function(r){if(r.setExtras(e),!n||"ChunkLoadError"!==n.name){var a=I.b(n);t.setState({eventId:a})}}))}},{key:"render",value:function(){var n=this.state,e=n.error,t=n.eventId,r=this.props,i=r.children,o=r.FallbackUI;return e?"ChunkLoadError"===e.name?a.a.createElement(p,null):a.a.createElement(o,{eventId:t}):i}}],[{key:"getDerivedStateFromError",value:function(n){return{error:n}}}]),e}(r.Component);h.defaultProps={FallbackUI:function(n){var e=n.eventId;return a.a.createElement("div",{style:{textAlign:"center",margin:"auto"}},a.a.createElement("p",{style:{fontSize:"large"}},"\ud83d\ude31 An unknown error has occurred, ",a.a.createElement("a",{href:"#",onClick:function(){return m.b({eventId:e})}},"click here to report to our team")," \ud83d\udc93"))}};var A=h,b=t(111),g=t(68),T=t(57),L=t.n(T),O=Object(r.lazy)((function(){return Promise.all([t.e(0),t.e(3),t.e(4),t.e(26),t.e(41)]).then(t.bind(null,3232))})),C=Object(r.lazy)((function(){return Promise.all([t.e(1),t.e(0),t.e(3),t.e(4),t.e(32)]).then(t.bind(null,3197))})),f=function(){return Object(r.useEffect)((function(){!function(){var n="true"===localStorage.getItem("authenticated"),e=localStorage.getItem("token"),t=window.location.pathname,r=window.location.search,a=L.a.parse(r);if(a&&a.token){if(["/lci_embed/play","/embed/profile","/login/reset_pass"].includes(t))return;b.a.to(g.a.TOLOGIN+"?token="+a.token,t)}else"/"===t&&n&&e&&b.a.to(g.a.LOGIN)}()}),[]),a.a.createElement(A,null,a.a.createElement(r.Suspense,{fallback:a.a.createElement("div",{className:"lds-ripple"},a.a.createElement("div",null))},a.a.createElement(s.a,{history:c.a},a.a.createElement(l.a,null,a.a.createElement(u.a,{exact:!0,path:"/",component:O}),a.a.createElement(C,null)))))};Boolean("localhost"===window.location.hostname||"[::1]"===window.location.hostname||window.location.hostname.match(/^127(?:\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));t(486),t(488),t(490),t(492),t(243),t(495),t(231);var v=t(152),y=t.n(v),R=t(161),D=t(160);m.a({dsn:"https://d97a54f8d3484116901073897bf07ebc@sentry.io/1851443",environment:"production",ignoreErrors:["ResizeObserver loop limit exceeded","ResizeObserver loop completed with undelivered notifications.","Canceled"]}),D.turingLogger.init({baseApiUrl:"https://logging-server.turing.com/",logName:"VETTING"});R.a.initialize("UA-144488935-1");y.a.initialize({gtmId:"GTM-K5MDNGD"}),o.a.render(a.a.createElement(f,null),document.getElementById("root")),"serviceWorker"in navigator&&navigator.serviceWorker.ready.then((function(n){n.unregister()}))},68:function(n,e,t){"use strict";t.d(e,"b",(function(){return i}));var r=t(144),a={LANDINGPAGE:"",TOLANDINGPAGE:"/",SIGNUP:"signup",LOGIN:"login",TOSIGNUP:"/signup",TOLOGIN:"/login",LOGOUT:"logout",LOGIN_FORGOT_PASS:"/login/forgot_pass",LOGIN_SENT_EMAIL:"/login/sent_email",LOGIN_RESET_PASS:"/login/reset_pass",SUBMIT_TEST_BOARD_HACKLAND:"test_board_hackland",SUBMIT_EMAIL_CHALLENGE:"email_challenge",SUBMIT_REMOTE_EXP:"remote_experience",SUBMIT_ENGLISH_EXP:"english_experience",SUBMIT_REG_LINKEDIN:"register_linkedin",SUBMIT_PROFILE:"profile",SUBMIT_JOBS:"jobs",SUBMIT_SKILLS:"skills",SUBMIT_RESUME:"resume",SUBMIT_NOTDEV_PROFILE:"notdev_profile",DASHBOARD_PERSONAL:"/dashboard/personal",DASHBOARD_ACCOUNT:"/dashboard/account",DASHBOARD_TEST_RESULT:"/dashboard/test_result",DASHBOARD_CHALLENGE:"/dashboard/challenge",ADMIN_CONTACT_LIST:"contact_list",ADMIN_VISIT_HISTORY:"admin/visit_history",DASHBOARD_DEV:"/dashboard/home",PROFILE_ONBOARDING:"/welcome",ADMIN_LOGIN:"/admin/login",GET_MULTI_CHOICES_CHALLENGE:"/dashboard/turing_test",THANK_PAGE:"thank",PREVIEW_PROBLEM:"previewProblem/:problemId",PROBLEM_EDITOR:"/admin/problemEditor/:problemId",CHALLENGE_EDITOR:"/admin/challengeEditor",ALGORITHM_LIST:"/dashboard/algorithm_challenge",MCQ_LIST:"/dashboard/turing_test",FIX_SUBMIT_REMOTE_EXP:"/submit/remote_experience",CALENDAR_EDITOR:"/admin/calendar/setup/:calId",ADMIN_LCI_ACCESS:"/admin/live/access",CANDIDATE_LCI_ACCESS:"/live/access",BOOKING:"/booking",ADMIN_LCI_SETUP:"/admin/live/setup",REFERRAL:"/dashboard/referral",REFERRAL_LANDING:"/referral",FINALIZE_RESUME:"/dashboard/finalize_my_resume",CODING_CHALLENGE:"/dashboard/coding_challenge",JOB_DETAIL:"/dashboard/jobs?jobId=:jobId",CODING_CHALLENGE_PRACTICE:"/dashboard/practice",JOB_PAGE:"/dashboard/jobs",TAKECHALLENGE_PAGE:"/dashboard/takechallenge",HIREFEST_PAGE:"/HireFest",VETSMITH_PAGE:"/enterprise",DASHBOARD_PROFILE:"/dashboard/profile",ACC_CODING_PAGE:"/dashboard/coding",GET_MATCHED:"/dashboard/matched",VETTING_ENGINE_URL:"https://vetting-engine.turing.com",VETTING_ENGINE_ACC_CODING_CHALLENGE:"/coding_challenge",VETTING_ENGINE_PRACTICE_CODING_CHALLENGE:"/practice_challenge"};function i(n){n="/".concat(n,"/").replace(/\/\//g,"/");var e=Object.entries(a).find((function(e){var t=Object(r.a)(e,2),a=(t[0],t[1]);return a="/".concat(a,"/").replace(/\/\//g,"/"),n===a}));if(e){var t=e[0],i={DASHBOARD_ACCOUNT:"ACCOUNT",DASHBOARD_CHALLENGE:"CHALLENGE",DASHBOARD_DEV:"HOME",PROFILE_ONBOARDING:"ONBOARDING",GET_MULTI_CHOICES_CHALLENGE:"TEST",THANK_PAGE:"THANK",MCQ_LIST:"TEST",FINALIZE_RESUME:"FINALIZE_RESUME",HIREFEST_PAGE:"HIREFEST",VETSMITH_PAGE:"VETSMITH",DASHBOARD_PROFILE:"PROFILE",JOB_PAGE:"JOBS"};return i[t]?i[t]:t}return null}e.a=a},81:function(n,e,t){"use strict";t.r(e),t.d(e,"AuthConstant",(function(){return I.a})),t.d(e,"AnswerConstant",(function(){return r.a})),t.d(e,"ApiConstant",(function(){return a.a})),t.d(e,"CodeConstant",(function(){return i.a})),t.d(e,"ButtonConstant",(function(){return o})),t.d(e,"MessageConstant",(function(){return s})),t.d(e,"SocialConstant",(function(){return l})),t.d(e,"ActionConstant",(function(){return u})),t.d(e,"DrawerConstant",(function(){return c})),t.d(e,"PageConstant",(function(){return d.a})),t.d(e,"TestConstant",(function(){return _})),t.d(e,"StatusConstant",(function(){return E})),t.d(e,"LanguageConstant",(function(){return S.a})),t.d(e,"ChallengeLanguagesConstant",(function(){return N})),t.d(e,"AutoHostBuildStatusConstants",(function(){return m})),t.d(e,"Durations",(function(){return p.b})),t.d(e,"AutoTestResultStatusConstants",(function(){return h})),t.d(e,"ABTestConfigTypes",(function(){return A})),t.d(e,"LoggingConstant",(function(){return b}));var r=t(153),a=t(154),i=t(163),o={FACEBOOK_SIGNIN:"Sign in with Facebook",FACEBOOK_SIGNUP:"Sign up with Facebook",GOOGLE_SIGNIN:"Sign in with Google",GOOGLE_SIGNUP:"Sign up with Google",LINKEDIN_CONNECT:"Sign in with LinkedIn",GITHUB_CONNECT:"Sign in with GitHub",SIGNIN:"Sign in",SIGNUP:"Sign Up",EXPORT_CSV:"Export CSV",VIEW_COLUMNS_PANEL:"View Columns",ADVANCED_SEARCH_PANEL:"Advanced Search",VIEW_COLUMNS_APPLY:"Apply",VIEW_COLUMNS_CANCEL:"Cancel",ADVANCED_SEARCH_APPLY:"Search",ADVANCED_SEARCH_CANCEL:"Cancel",VALIDATION:"Validation",VIEW_FAKE_EMAILS:"View Fake Emails",VIEW_ALL_EMAILS:"View All Emails",SEND_TEST_EMAIL:"Send Test Email",SEND_EMAIL:"Send Email",CHALLENGE_SHOW_DESCRIPTION:"Show Challenge",CHALLENGE_HIDE_DESCRIPTION:"Hide Challenge",DASHBOARD_LOAD:"Load Statistics",DIALOG_NONE:"None",DIALOG_ADD:"Add",DIALOG_EDIT:"Edit",DIALOG_DELETE:"Delete",CREATE_AN_ACCOUNT:"Continue with email"},s={SELECT_JOBS:"Please select at least one job to be beginner/intermediate/expert level.",SELECT_SKILLS:"Please select at least one skill to be beginner/intermediate/expert level.",EXIST_USER_JOB:"This job already exists. Please enter another job again.",EXIST_USER_SKILL:"This skill already exists. Please enter another skill again.",PASSWORD_DOES_NOT_MATCHED:"New Password and Confirm Password do not match. Please try again.",RESET_PASS_LINK_ERROR:"Please click the message for updating password again.",PASSWORD_VALIDATION:"Password is too short (minimum is 6 characters).",CALL_API_ERROR:"Operation failed. Try again later.",NETWORK_ERROR:"There is a problem with your network. Please try again.",LEVEL_DONOT_KNOW:1,LEVEL_BEGINNER:2,LEVEL_INTERMEDIATE:3,LEVEL_EXPERT:4,HOME_CHALLENGE_YES:"Yes, I am planning to spend 8-10 hours to complete Turing\u2019s tests within the next week.",HOME_CHALLENGE_NO:"No, I don\u2019t have time to finish all the tests this week, but I\u2019ll start now and finish as soon as possible.",REMOTE_HOURS_1000P:"More than 1000 hours",AVAILABILITY_0:"Full time jobs (~40 hours/week)",AVAILABILITY_1:"Part time jobs (~20 hours/ week)",DESCRIBE_ENGLISH_0:"Great. I should be able to easily understand what they say and they should easily be able to understand what I say without having to repeat each other much.",DESCRIBE_ENGLISH_1:"Average. I can communicate with a U.S engineering manager if we both speak slowly and occasionally repeat sentences that the other person didn\u2019t understand.",DESCRIBE_ENGLISH_2:"I can only communicate in written form over email or slack, effectively. Verbal communication in English with an American engineering manager would be slow and impractical.",ENGG_EXP_0:"No experience",ENGG_EXP_1:"Less than a year",ENGG_EXP_2:"1 to 2 years",ENGG_EXP_3:"3 to 4 years",ENGG_EXP_4:"More than 4 years",LEAD_EXP_0:"No experience",LEAD_EXP_1:"Less than a year",LEAD_EXP_2:"1 to 2 years",LEAD_EXP_3:"3 to 4 years",LEAD_EXP_4:"More than 4 years",ACCOUNT_EXISTS:"Sorry, this user already exists.",ACCOUNT_NOT_EXISTS:"The account does not exist.",INVALID_PASSWORD:"Invalid password.",UNAUTHORIZED:"Unauthorized access."},l={FACEBOOK_APP_ID:"362692901291482",GOOGLE_APP_ID:"984454836171-3qigc7lltem7vrlh1rhj6le3dqg3n9kg.apps.googleusercontent.com",GOOGLE_APP_ID_ADMIN:"984454836171-3qigc7lltem7vrlh1rhj6le3dqg3n9kg.apps.googleusercontent.com",GITHUB_CLINETID_L:"77a1d82f771921fde1e8",GITHUB_SECRET_L:"81f61c4388fab7f4f8b1e339ed14e853ee6fb11d",GITHUB_CLINETID_W:"2897ff08d905593e8f70",GITHUB_SECRET_W:"b40a8633bc2bde6aa2a22141fd79c0aa4a4cee24",GITHUB_CLINETID_LY:"b3a0fc618a6176039ccb",GITHUB_SECRET_LY:"dc88af963d0f3bd0de645643c38d381e28d44781",GITHUB_CLINETID_COM:"89f64fb5184f85b30f70",GITHUB_SECRET_COM:"4fe25d38d50a615b3fd75422c7b8bb573600bfac",LINKEDIN_APP_ID:"77nc5lbfupp18k",STATUS_NOT_ACCOUNT:"don't have account"},u={GET_DEFAULT_PERSONAL_INFOS:"GET_DEFAULT_PERSONAL_INFOS",UPDATE_CURRENCY_RATE_CONFIG:"UPDATE_CURRENCY_RATE_CONFIG",SHOW_AVAILABILITY_MODAL:"SHOW_AVAILABILITY_MODAL",SAVE_AVAILABILITY_TO_STORE:"SAVE_AVAILABILITY_TO_STORE"},c={COLLAPSE_DRAWER:"COLLAPSE_DRAWER",SET_CURRENT_CHALLENGE:"SET_CURRENT_CHALLENGE",SET_AVAILABILITY_OBJECT:"SET_AVAILABILITY_OBJECT"},d=t(68),_={Common:{TYPE:["Palindrome","Hackland","ListMax"],LANGUAGES:["Java","Python","Objective-C","Swift","JavaScript","Ruby","Scala","PHP","C++","C"],EDITOR_LANGUAGES:["java","python","objective-c","swift","javascript","ruby","scala","php","c++","c"],LANGUAGEID:[4,24,10,37,17,12,21,8,7,6]},InitCode:{Palindrome:["import java.util.Scanner;\n\npublic static boolean isPalindrome(String word) {\n  // Please write your code here.\n}\npublic static void main(String[] args) {\n  Scanner reader = new Scanner(System.in);\n  String word = reader.nextLine();\n  System.out.println(isPalindrome(word));\n}","class Palindrome:\n  @staticmethod\n  def is_palindrome(word):\n    #Please write your code here.\n    return None\nword = input()\nprint(Palindrome.is_palindrome(word))",'#import <Foundation/Foundation.h>\n\nBOOL isPalindrome(NSString *x)\n{\n   // Please write your code here.\n}\nint main ()\n{\n   NSAutoreleasePool *pool = [[NSAutoreleasePool alloc] init];\n   NSFileHandle *input = [NSFileHandle fileHandleWithStandardInput];\n   NSData *inputData = [NSData dataWithData:[input availableData]];\n   NSString *word = [[NSString alloc] initWithData:inputData encoding:NSUTF8StringEncoding];\n   word = [word stringByTrimmingCharactersInSet:[NSCharacterSet whitespaceAndNewlineCharacterSet]];\n   printf("%s", isPalindrome(word) ? "true" : "false");\n   [pool release];\n   return 0;\n}',"func isPalindrome(_ word: String) -> Bool {\n  // Please write your code here.\n}\nlet word = readLine()!\nprint(isPalindrome(word))","function isPalindrome(word)\n{\n  // Please write your code here.\n}\nvar word = readline()\nprint(isPalindrome(word))","def isPalindrome?(word)\n  # Please write your code here.\nend\nword=$stdin.readline\nputs isPalindrome?(word)","def isPalindrome(word : String) : Boolean = {\n  // Please write your code here.\n}\nval word = scala.io.StdIn.readLine()\nprintln(isPalindrome(word))",'<?php\nfunction isPalindrome($word){\n  // Please write your code here.\n}\n$word = fgets(STDIN);\necho isPalindrome($word) ? "true" : "false";\n?>',"#include <iostream>\n#include <string>\nusing namespace std;\n\nbool isPalindrome(string word)\n{\n  // Please write your code here.\n}\nint main()\n{\n  string word;\n  cin >> word;\n  cout << isPalindrome(word) << endl;\n}",'#include <stdio.h>\n#include <string.h>\n\nint isPalindrome(char word[])\n{\n  // Please write your code here.\n}\nint main()\n{\n  char word[100];\n  if (fgets(word , sizeof(word), stdin) > 0)\n  {\n   printf("%s", isPalindrome(word) ? "true" : "false");\n  }\n}'],Hackland:['import java.util.*;\n\npublic static String voteWinner(String[] votes) {\n // Please write your code here.\n}\npublic static void main(String[] args) {\n  Scanner reader = new Scanner(System.in);\n  int votesCount = reader.nextInt();\n  reader.skip("(\\r\\n|[\\n\\r\\u2028\\u2029\\u0085])?");\n  String[] votes = new String[votesCount];\n  for (int i = 0; i < votesCount; i++) {\n    String votesItem = reader.nextLine();\n    votes[i] = votesItem;\n  }\n  System.out.println(voteWinner(votes));\n}',"class ElectionWinner:\n  @staticmethod\n  def voteWinner(votes):\n    #Please write your code here.\n    return None\nvotes_count = int(input())\nvotes = []\nfor _ in range(votes_count):\n  votes_item=input()\n  votes.append(votes_item)\nprint(ElectionWinner.voteWinner(votes))",'#import <Foundation/Foundation.h>\n\nNSString* voteWinner(NSArray *votes)\n{\n   // Please write your code here.\n}\nint main ()\n{\n   NSAutoreleasePool *pool = [[NSAutoreleasePool alloc] init];\n   NSFileHandle *input = [NSFileHandle fileHandleWithStandardInput];\n   NSData *inputData = [NSData dataWithData:[input availableData]];\n   NSString *inputString = [[NSString alloc] initWithData:inputData encoding:NSUTF8StringEncoding];\n   inputString = [inputString stringByTrimmingCharactersInSet:[NSCharacterSet whitespaceAndNewlineCharacterSet]];\n   NSArray *inputArray = [inputString componentsSeparatedByString:@"\\n"];\n   NSUInteger currentInputLine = 0;\n   NSNumberFormatter *formatter = [[NSNumberFormatter alloc] init];\n   NSUInteger votesCount = [[formatter numberFromString:[inputArray objectAtIndex:currentInputLine]] integerValue];\n   currentInputLine += 1;\n   NSArray *votes = [inputArray subarrayWithRange:NSMakeRange(currentInputLine, votesCount)];\n   printf("%s\\n", [voteWinner(votes) cStringUsingEncoding:NSUTF8StringEncoding]);\n   [pool release];\n   return 0;\n}','import Foundation\n\nfunc voteWinner(votes: [String]) -> String {\n  // Please write your code here.\n}\nguard let votesCount = Int((readLine()?.trimmingCharacters(in: CharacterSet.whitespacesAndNewlines).uppercased())!)\nelse { fatalError("Bad input") }\nlet votes: [String] = AnyIterator{ readLine() }.map {\n    $0\n}\nguard votes.count == votesCount else { fatalError("Bad input") }\nprint(voteWinner(votes: votes))',"function voteWinner(votes)\n{\n  // Please write your code here.\n}\nconst votesCount = parseInt(readline(), 10)\nlet votes = []\nfor (let i = 0; i < votesCount; i++) {\n  const votesItem = readline()\n  votes.push(votesItem)\n}\nprint(voteWinner(votes))","def voteWinner(votes)\n  # Please write your code here.\nend\nvotes_count = gets.to_i\nvotes = Array.new(votes_count)\nvotes_count.times do |i|\n  votes_item = gets.to_s.rstrip\n  votes[i] = votes_item\nend\nputs voteWinner votes","def voteWinner(votes : Array[String]) : String = {\n  // Please write your code here.\n}\nval stdin = scala.io.StdIn\nval votesCount = stdin.readLine.trim.toInt\nval votes = Array.ofDim[String](votesCount)\nfor (i <- 0 until votesCount) {\n  val votesItem = stdin.readLine\n  votes(i) = votesItem\n}\nprintln(voteWinner(votes))",'<?php\nfunction voteWinner($votes){\n  // Please write your code here.\n}\n$stdin = fopen("php://stdin", "r");\nfscanf($stdin, "%d\\n", $votes_count);\n$votes = array();\nfor ($i = 0; $i < $votes_count; $i++) {\n  $votes_item = "";\n  fscanf($stdin, "%[^\\n]", $votes_item);  \n  $votes[] = $votes_item;\n}\necho voteWinner($votes);\n?>',"#include <iostream>\n#include <bits/stdc++.h>\n#include <string>\nusing namespace std;\n\nstring voteWinner(vector<string> votes)\n{\n  // Please write your code here.\n}\nint main()\n{\n  int votes_count;\n  cin >> votes_count;\n  cin.ignore(numeric_limits<streamsize>::max(), '\\n');\n  vector<string> votes(votes_count);\n  for (int i = 0; i < votes_count; i++) {\n    string votes_item;\n    getline(cin, votes_item);\n    votes[i] = votes_item;\n  }\n  cout << voteWinner(votes) << endl;\n}","#include <assert.h>\n#include <limits.h>\n#include <math.h>\n#include <stdbool.h>\n#include <stdio.h>\n#include <stddef.h>\n#include <stdint.h>\n#include <stdlib.h>\n#include <string.h>\n\nchar* voteWinner(int votes_count, char** votes) {\n  // Please write your code here.\n}\nchar* readline() {\n  size_t alloc_length = 1024;\n  size_t data_length = 0;\n  char* data = malloc(alloc_length);\n  while (true) {\n    char* cursor = data + data_length;\n    char* line = fgets(cursor, alloc_length - data_length, stdin);\n    if (!line) {\n      break;\n    }\n    data_length += strlen(cursor);\n    if (data_length < alloc_length - 1 || data[data_length - 1] == '\\n') {\n      break;\n    }\n    alloc_length <<= 1;\n    data = realloc(data, alloc_length);\n    if (!line) {\n      break;\n    }\n  }\n  if (data[data_length - 1] == '\\n') {\n    data[data_length - 1] = '\\0';\n    data = realloc(data, data_length);\n  } else {\n    data = realloc(data, data_length + 1);\n    data[data_length] = '\\0';\n  }\n  return data;\n}\nint main()\n{\n  char* votes_count_endptr;\n  char* votes_count_str = readline();\n  int votes_count = strtol(votes_count_str, &votes_count_endptr, 10);\n  if (votes_count_endptr == votes_count_str || *votes_count_endptr != '\\0') { exit(EXIT_FAILURE); }\n  char** votes = malloc(votes_count * sizeof(char*));\n  for (int i = 0; i < votes_count; i++) {\n    char* votes_item = readline();\n    *(votes + i) = votes_item;\n  }\n  printf(\"%s\\n\", voteWinner(votes_count, votes));\n  return 0;\n}"],ListMax:['import java.math.*;\nimport java.security.*;\nimport java.text.*;\nimport java.util.*;\nimport java.util.concurrent.*;\nimport java.util.function.*;\nimport java.util.regex.*;\nimport java.util.stream.*;\nimport static java.util.Arrays.*;\nimport static java.util.stream.Collectors.joining;\nimport static java.util.stream.Collectors.toList;\n\npublic static long listMax(int n, List<List<Integer>> operations) {\n // Please write your code here.\n}\npublic static void main(String[] args) {\n  Scanner reader = new Scanner(System.in);\n  int n = Integer.parseInt(reader.nextLine().trim());\n  int operationsRows = Integer.parseInt(reader.nextLine().trim());\n  int operationsColumns = Integer.parseInt(reader.nextLine().trim());\n  List<List<Integer>> operations = new ArrayList<>();\n  IntStream.range(0, operationsRows).forEach(i -> {\n    operations.add(\n      Stream.of(reader.nextLine().replaceAll("\\\\s+$", "").split(" "))\n      .map(Integer::parseInt)\n      .collect(toList())\n    );\n  });\n  System.out.println(listMax(n, operations));\n}',"class GetListMax:\n  @staticmethod\n  def listMax(n, operations):\n    #Please write your code here.\n    return None\nn = int(input().strip())\noperation_rows = int(input().strip())\noperations_columns = int(input().strip())\noperations = []\nfor _ in range(operation_rows):\n  operations.append(list(map(int, input().rstrip().split())))\nprint(GetListMax.listMax(n, operations))",'#import <Foundation/Foundation.h>\n\n@interface NSString (StringByTrimmingTrailingCharactersInSet)\n- (NSString *) stringByTrimmingTrailingCharactersInSet:(NSCharacterSet *)characterSet;\n@end\n\n@implementation NSString (StringByTrimmingTrailingCharactersInSet)\n- (NSString *) stringByTrimmingTrailingCharactersInSet:(NSCharacterSet *)characterSet {\n  NSRange end = [self rangeOfCharacterFromSet:[characterSet invertedSet] options:NSBackwardsSearch];\n\n  if (end.location == NSNotFound) {\n    return @"";\n  }\n  return [self substringToIndex:end.location + 1];\n}\n@end\n\n@interface NSString (ArrayFromString)\n- (NSArray *) arrayFromString;\n@end\n\n@implementation NSString (ArrayFromString)\n- (NSArray *) arrayFromString {\n  return [[self stringByTrimmingTrailingCharactersInSet:[NSCharacterSet whitespaceAndNewlineCharacterSet]] componentsSeparatedByString:@" "];\n}\n@end\n\nNSNumber* listMax(NSNumber *n, NSArray *operations)\n{\n  // Please write your code here.\n}\nint main ()\n{\n  NSAutoreleasePool *pool = [[NSAutoreleasePool alloc] init];\n  NSFileHandle *input = [NSFileHandle fileHandleWithStandardInput];\n  NSNumberFormatter *numberFormatter = [[NSNumberFormatter alloc] init];\n  NSData *availableInputData = [NSData dataWithData:[input availableData]];\n  NSString *availableInputString = [[NSString alloc] initWithData:availableInputData encoding:NSUTF8StringEncoding];\n  NSArray *availableInputArray = [availableInputString componentsSeparatedByString:@"\\n"];\n  NSUInteger currentInputLine = 0;\n  NSNumber *n = [numberFormatter numberFromString:[[availableInputArray objectAtIndex:currentInputLine] stringByTrimmingCharactersInSet:[NSCharacterSet whitespaceAndNewlineCharacterSet]]];\n  currentInputLine += 1;\n  NSUInteger operationsRows = [[numberFormatter numberFromString:[[availableInputArray objectAtIndex:currentInputLine] stringByTrimmingCharactersInSet:[NSCharacterSet whitespaceAndNewlineCharacterSet]]] integerValue];\n  currentInputLine += 1;\n  NSUInteger operationsColumns = [[numberFormatter  numberFromString:[[availableInputArray objectAtIndex:currentInputLine] stringByTrimmingCharactersInSet:[NSCharacterSet whitespaceAndNewlineCharacterSet]]] integerValue];\n  currentInputLine += 1;\n  NSArray *operationsTemp = [[availableInputArray subarrayWithRange:NSMakeRange(currentInputLine, operationsRows)] valueForKey:@"arrayFromString"];\n  currentInputLine += operationsRows;\n  for (NSArray *operationsRow in operationsTemp) {\n   if ([operationsRow count] != operationsColumns) {\n      [NSException raise:@"Bad Input" format:@"%@", [operationsRow componentsJoinedByString:@", "]];\n    }\n  }\n  NSMutableArray *operationsTempMutable = [NSMutableArray arrayWithCapacity:operationsRows];\n  for (NSArray *operationsTempRow in operationsTemp) {\n    NSMutableArray *operationsTempRowMutable = [NSMutableArray arrayWithCapacity:operationsRows];\n    for (NSString *operationsItem in operationsTempRow) {\n      [operationsTempRowMutable addObject:[numberFormatter numberFromString:operationsItem]];\n    }\n   [operationsTempMutable addObject:[operationsTempRowMutable copy]];\n  }\n  NSArray *operations = [operationsTempMutable copy];\n  printf("%d\\n", [listMax(n, operations) intValue]);\n  [pool release];\n  return 0;\n}','import Foundation\n\nfunc listMax(n: Int, operations: [[Int]]) -> Int {\n  // Please write your code here.\n}\nguard let n = Int((readLine()?.trimmingCharacters(in: .whitespacesAndNewlines))!)\nelse { fatalError("Bad input") }\n\nguard let operationsRows = Int((readLine()?.trimmingCharacters(in: .whitespacesAndNewlines))!)\nelse { fatalError("Bad input") }\n\nguard let operationsColumns = Int((readLine()?.trimmingCharacters(in: .whitespacesAndNewlines))!)\nelse { fatalError("Bad input") }\n\nlet operations: [[Int]] = AnyIterator{ readLine()?.replacingOccurrences(of: "\\\\s+$", with: "", options: .regularExpression) }.prefix(operationsRows).map {\n  let operationsRow: [Int] = $0._split(separator: " ").map {\n    if let operationsItem = Int($0) {\n      return operationsItem\n    } else { fatalError("Bad input") }\n  }\n  guard operationsRow.count == operationsColumns else { fatalError("Bad input") }\n  return operationsRow\n}\n\nguard operations.count == operationsRows else { fatalError("Bad input") }\nprint(listMax(n: n, operations: operations))','function listMax(n, operations)\n{\n  // Please write your code here.\n}\nconst n = parseInt(readline().trim(), 10)\nconst operationsRows = parseInt(readline().trim(), 10);\nconst operationsColumns = parseInt(readline().trim(), 10);\nlet operations = Array(operationsRows);\nfor (let i = 0; i < operationsRows; i++) {\n  operations[i] = readline().replace(/\\s+$/g, "").split(" ").map(operationsTemp => parseInt(operationsTemp, 10));\n}\nprint(listMax(n, operations))',"def listMax(n, operations)\n  # Please write your code here.\nend\nn = gets.strip.to_i\noperations_rows = gets.strip.to_i\noperations_columns = gets.strip.to_i\noperations = Array.new(operations_rows)\noperations_rows.times do |i|\n  operations[i] = gets.rstrip.split.map(&:to_i)\nend\nputs listMax n, operations",'def listMax(n: Int, operations: Array[Array[Int]]): Long = {\n  // Please write your code here.\n}\nval stdin = scala.io.StdIn\nval n = stdin.readLine.trim.toInt\nval operationsRows = stdin.readLine.trim.toInt\nval operationsColumns = stdin.readLine.trim.toInt\nval operations = Array.ofDim[Int](operationsRows, operationsColumns)\n\nfor (i <- 0 until operationsRows) {\n  operations(i) = stdin.readLine.replaceAll("\\\\s+$", "").split(" ").map(_.trim.toInt)\n}\n\nprintln(listMax(n, operations))','<?php\nfunction listMax($n, $operations){\n  // Please write your code here.\n}\n$n = intval(trim(fgets(STDIN)));\n$operations_rows = intval(trim(fgets(STDIN)));\n$operations_columns = intval(trim(fgets(STDIN)));\n$operations = array();\nfor ($i = 0; $i < $operations_rows; $i++) {\n  $operations_temp = rtrim(fgets(STDIN));\n  $operations[] = array_map("intval", preg_split("/ /", $operations_temp, -1, PREG_SPLIT_NO_EMPTY));\n}\necho listMax($n, $operations);\n?>','#include <bits/stdc++.h>\n\nusing namespace std;\n\nstring ltrim(const string &);\nstring rtrim(const string &);\nvector<string> split(const string &);\n\nlong listMax(int n, vector<vector<int>> operations)\n{\n  // Please write your code here.\n}\nstring ltrim(const string &str) {\n  string s(str);\n\n  s.erase(\n    s.begin(),\n    find_if(s.begin(), s.end(), not1(ptr_fun<int, int>(isspace)))\n  );\n\n  return s;\n}\nstring rtrim(const string &str) {\n  string s(str);\n\n  s.erase(\n    find_if(s.rbegin(), s.rend(), not1(ptr_fun<int, int>(isspace))).base(),\n    s.end()\n  );\n\n  return s;\n}\nvector<string> split(const string &str) {\n  vector<string> tokens;\n\n  string::size_type start = 0;\n  string::size_type end = 0;\n\n  while ((end = str.find(" ", start)) != string::npos) {\n    tokens.push_back(str.substr(start, end - start));\n\n    start = end + 1;\n  }\n\n  tokens.push_back(str.substr(start));\n\n  return tokens;\n}\n\nint main()\n{\n  string n_temp;\n  getline(cin, n_temp);\n\n  int n = stoi(ltrim(rtrim(n_temp)));\n\n  string operations_rows_temp;\n  getline(cin, operations_rows_temp);\n\n  int operations_rows = stoi(ltrim(rtrim(operations_rows_temp)));\n\n  string operations_columns_temp;\n  getline(cin, operations_columns_temp);\n\n  int operations_columns = stoi(ltrim(rtrim(operations_columns_temp)));\n\n  vector<vector<int>> operations(operations_rows);\n\n  for (int i = 0; i < operations_rows; i++) {\n    operations[i].resize(operations_columns);\n\n    string operations_row_temp_temp;\n    getline(cin, operations_row_temp_temp);\n\n    vector<string> operations_row_temp = split(rtrim(operations_row_temp_temp));\n\n    for (int j = 0; j < operations_columns; j++) {\n      int operations_row_item = stoi(operations_row_temp[j]);\n\n      operations[i][j] = operations_row_item;\n    }\n  }\n  cout << listMax(n, operations) << endl;\n}',"#include <assert.h>\n#include <ctype.h>\n#include <limits.h>\n#include <math.h>\n#include <stdbool.h>\n#include <stdio.h>\n#include <stddef.h>\n#include <stdint.h>\n#include <stdlib.h>\n#include <string.h>\n\nchar* readline();\nchar* ltrim(char*);\nchar* rtrim(char*);\nchar** split_string(char*);\nint parse_int(char*);\n\nchar* readline() {\n  size_t alloc_length = 1024;\n  size_t data_length = 0;\n  char* data = malloc(alloc_length);\n  while (true) {\n    char* cursor = data + data_length;\n    char* line = fgets(cursor, alloc_length - data_length, stdin);\n    if (!line) {\n      break;\n    }\n    data_length += strlen(cursor);\n    if (data_length < alloc_length - 1 || data[data_length - 1] == '\\n') {\n      break;\n    }\n    alloc_length <<= 1;\n    data = realloc(data, alloc_length);\n    if (!line) {\n      break;\n    }\n  }\n  if (data[data_length - 1] == '\\n') {\n    data[data_length - 1] = '\\0';\n    data = realloc(data, data_length);\n  } else {\n    data = realloc(data, data_length + 1);\n    data[data_length] = '\\0';\n  }\n  return data;\n}\n\nchar* ltrim(char* str) {\n  if (!str) {\n    return '\\0';\n  }\n\n  if (!*str) {\n    return str;\n  }\n\n  while (*str != '\\0' && isspace(*str)) {\n    str++;\n  }\n\n  return str;\n}\n\nchar* rtrim(char* str) {\n  if (!str) {\n    return '\\0';\n  }\n\n  if (!*str) {\n    return str;\n  }\n\n  char* end = str + strlen(str) - 1;\n\n  while (end >= str && isspace(*end)) {\n    end--;\n  }\n\n  *(end + 1) = '\\0';\n\n  return str;\n}\n\nchar** split_string(char* str) {\n  char** splits = NULL;\n  char* token = strtok(str, \" \");\n  int spaces = 0;\n\n  while (token) {\n    splits = realloc(splits, sizeof(char*) * ++spaces);\n\n    if (!splits) {\n      return splits;\n    }\n\n    splits[spaces - 1] = token;\n    token = strtok(NULL, \" \");\n  }\n\n  return splits;\n}\n\nint parse_int(char* str) {\n  char* endptr;\n  int value = strtol(str, &endptr, 10);\n\n  if (endptr == str || *endptr != '\\0') {\n    exit(EXIT_FAILURE);\n  }\n  return value;\n}\n\nlong listMax(int n, int operations_rows, int operations_columns, int** operations) {\n  // Please write your code here.\n}\nint main()\n{\n  int n = parse_int(ltrim(rtrim(readline())));\n  int operations_rows = parse_int(ltrim(rtrim(readline())));\n  int operations_columns = parse_int(ltrim(rtrim(readline())));\n  int** operations = malloc(operations_rows * sizeof(int*));\n\n  for (int i = 0; i < operations_rows; i++) {\n    *(operations + i) = malloc(operations_columns * (sizeof(int)));\n    char** operations_item_temp = split_string(rtrim(readline()));\n\n    for (int j = 0; j < operations_columns; j++) {\n      int operations_item = parse_int(*(operations_item_temp + j));\n      *(*(operations + i) + j) = operations_item;\n    }\n  }\n  printf(\"%ld\\n\", listMax(n, operations_rows, operations_columns, operations));\n  return 0;\n}"]},FunctionName:{Palindrome:["public static boolean isPalindrome(String word)","def is_palindrome(word)","BOOL isPalindrome(NSString *x)","func isPalindrome(_ word: String) -> Bool","function isPalindrome(word)","def isPalindrome?(word)","def isPalindrome(word : String) : Boolean","function isPalindrome($word)","bool isPalindrome(word)","function isPalindrome(word)"],Hackland:["public static String voteWinner(String[] votes)","def voteWinner(votes)","(NSString *) voteWinner(NSArray *x)","func voteWinner(votes: [String]) -> String","function voteWinner(votes)","def voteWinner(votes)","def isPalindrome(votes : Array[String]) : String","function voteWinner($votes)","string voteWinner(vector<string> votes)","char* voteWinner(int votes_count, char** votes)"],ListMax:["public static long listMax(int n, List<List<Integer>> operations)","def listMax(n, operations)","NSNumber * listMax(NSNumber *n, NSArray *operations)","func listMax(n: Int, operations: [[Int]]) -> Int","function listMax(n, operations)","def listMax(n, operations)","def listMax(n: Int, operations: Array[Array[Int]]): Long","function listMax($n, $operations)","listMax(int n, vector<vector<int>> operations)","long listMax(int n, int operations_rows, int operations_columns, int** operations)"]},TestCases:{Palindrome:{case1:"DegasarewenotdrawnonwardnoInuniondrawnonwardtonewerasaged",case2:"pusillanimityobsessesboytiminallIsUp",case3:"pusillanimityobsessesboytiminallIsUp123",case4:"A man, a plan, a cat, a ham, a yak, a yam, a hat, a canal-Panama!"},Hackland:{case1:['"Alex"','"Michael"','"Harry"','"Dave"','"Michael"','"Victor"','"Harry"','"Alex"','"Mary"','"Mary"'],case2:['"hfail"','"bz"','"hfail"','"ru"','"fkqb"','"fkqb"','"hfail"','"ru"','"ru"','"hfail"','"bz"','"fkqb"','"bz"','"bz"','"fkqb"','"bz"','"fkqb"','"ru"','"fkqb"','"ru"','"ru"','"bz"','"hfail"','"fkqb"','"hfail"','"bz"','"hfail"','"ru"','"hfail"','"bz"','"bz"','"bz"','"fkqb"','"ru"','"fkqb"','"hfail"','"fkqb"','"bz"','"bz"','"hfail"','"hfail"','"hfail"','"bz"','"hfail"','"ru"','"ru"','"hfail"','"hfail"','"bz"','"hfail"'],objCCase1:['@"Alex"','@"Michael"','@"Harry"','@"Dave"','@"Michael"','@"Victor"','@"Harry"','@"Alex"','@"Mary"','@"Mary"'],objCCase2:['@"hfail"','@"bz"','@"hfail"','@"ru"','@"fkqb"','@"fkqb"','@"hfail"','@"ru"','@"ru"','@"hfail"','@"bz"','@"fkqb"','@"bz"','@"bz"','@"fkqb"','@"bz"','@"fkqb"','@"ru"','@"fkqb"','@"ru"','@"ru"','@"bz"','@"hfail"','@"fkqb"','@"hfail"','@"bz"','@"hfail"','@"ru"','@"hfail"','@"bz"','@"bz"','@"bz"','@"fkqb"','@"ru"','@"fkqb"','@"hfail"','@"fkqb"','@"bz"','@"bz"','@"hfail"','@"hfail"','@"hfail"','@"bz"','@"hfail"','@"ru"','@"ru"','@"hfail"','@"hfail"','@"bz"','@"hfail"']},ListMax:{case1:{nCount:4,operationRows:3,operationColumns:3,operations:"[[2, 3, 603], [1, 1, 286], [4, 4, 882]]",operationsJava:"asList(2, 3, 603), asList(1, 1, 286), asList(4, 4, 882)",operationsObj:"[NSArray arrayWithObjects:[NSNumber numberWithInt:2], [NSNumber numberWithInt:3], [NSNumber numberWithInt:603], nil],[NSArray arrayWithObjects:[NSNumber numberWithInt:1], [NSNumber numberWithInt:1], [NSNumber numberWithInt:286], nil],[NSArray arrayWithObjects:[NSNumber numberWithInt:4], [NSNumber numberWithInt:4], [NSNumber numberWithInt:882], nil]",operationsScala:"Array(2, 3, 603), Array(1, 1, 286), Array(4, 4, 882)",operationsPhp:"array(2, 3, 603), array(1, 1, 286), array(4, 4, 882)",operationsCpp:"{{2, 3, 603}, {1, 1, 286}, {4, 4, 882}}"},case2:{nCount:40,operationRows:30,operationColumns:3,operations:"[[29, 40, 787], [9, 26, 219], [21, 31, 214], [8, 22, 719], [15, 23, 102], [11, 24, 83], [14, 22, 321], [5, 22, 300], [11, 30, 832], [5, 25, 29],[16, 24, 577], [3, 10, 905], [15, 22, 335], [29, 35, 254], [9, 20, 20], [33, 34, 351], [30, 38, 564], [11, 31, 969], [3, 32, 11], [29, 35, 267],[4, 24, 531], [1, 38, 892], [12, 18, 825], [25, 32, 99], [3, 39, 107], [12, 37, 131], [3, 26, 640], [8, 39, 483], [8, 11, 194], [12, 37, 502]]",operationsJava:"asList(29, 40, 787), asList(9, 26, 219), asList(21, 31, 214), asList(8, 22, 719), asList(15, 23, 102), asList(11, 24, 83), asList(14, 22, 321), asList(5, 22, 300), asList(11, 30, 832), asList(5, 25, 29),asList(16, 24, 577), asList(3, 10, 905), asList(15, 22, 335), asList(29, 35, 254), asList(9, 20, 20), asList(33, 34, 351), asList(30, 38, 564), asList(11, 31, 969), asList(3, 32, 11), asList(29, 35, 267),asList(4, 24, 531), asList(1, 38, 892), asList(12, 18, 825), asList(25, 32, 99), asList(3, 39, 107), asList(12, 37, 131), asList(3, 26, 640), asList(8, 39, 483), asList(8, 11, 194), asList(12, 37, 502)",operationsObj:"[NSArray arrayWithObjects:[NSNumber numberWithInt:29], [NSNumber numberWithInt:40], [NSNumber numberWithInt:787], nil],[NSArray arrayWithObjects:[NSNumber numberWithInt:12], [NSNumber numberWithInt:37], [NSNumber numberWithInt:502], nil],[NSArray arrayWithObjects:[NSNumber numberWithInt:9], [NSNumber numberWithInt:26], [NSNumber numberWithInt:219], nil],[NSArray arrayWithObjects:[NSNumber numberWithInt:21], [NSNumber numberWithInt:31], [NSNumber numberWithInt:214], nil],[NSArray arrayWithObjects:[NSNumber numberWithInt:8], [NSNumber numberWithInt:22], [NSNumber numberWithInt:719], nil],[NSArray arrayWithObjects:[NSNumber numberWithInt:15], [NSNumber numberWithInt:23], [NSNumber numberWithInt:102], nil],[NSArray arrayWithObjects:[NSNumber numberWithInt:11], [NSNumber numberWithInt:24], [NSNumber numberWithInt:83], nil],[NSArray arrayWithObjects:[NSNumber numberWithInt:14], [NSNumber numberWithInt:22], [NSNumber numberWithInt:321], nil],[NSArray arrayWithObjects:[NSNumber numberWithInt:5], [NSNumber numberWithInt:22], [NSNumber numberWithInt:300], nil],[NSArray arrayWithObjects:[NSNumber numberWithInt:11], [NSNumber numberWithInt:30], [NSNumber numberWithInt:832], nil],[NSArray arrayWithObjects:[NSNumber numberWithInt:5], [NSNumber numberWithInt:25], [NSNumber numberWithInt:29], nil],[NSArray arrayWithObjects:[NSNumber numberWithInt:16], [NSNumber numberWithInt:24], [NSNumber numberWithInt:577], nil],[NSArray arrayWithObjects:[NSNumber numberWithInt:3], [NSNumber numberWithInt:10], [NSNumber numberWithInt:905], nil],[NSArray arrayWithObjects:[NSNumber numberWithInt:15], [NSNumber numberWithInt:22], [NSNumber numberWithInt:335], nil],[NSArray arrayWithObjects:[NSNumber numberWithInt:29], [NSNumber numberWithInt:35], [NSNumber numberWithInt:254], nil],[NSArray arrayWithObjects:[NSNumber numberWithInt:9], [NSNumber numberWithInt:20], [NSNumber numberWithInt:20], nil],[NSArray arrayWithObjects:[NSNumber numberWithInt:33], [NSNumber numberWithInt:34], [NSNumber numberWithInt:351], nil],[NSArray arrayWithObjects:[NSNumber numberWithInt:30], [NSNumber numberWithInt:38], [NSNumber numberWithInt:564], nil],[NSArray arrayWithObjects:[NSNumber numberWithInt:11], [NSNumber numberWithInt:31], [NSNumber numberWithInt:969], nil],[NSArray arrayWithObjects:[NSNumber numberWithInt:3], [NSNumber numberWithInt:32], [NSNumber numberWithInt:11], nil],[NSArray arrayWithObjects:[NSNumber numberWithInt:29], [NSNumber numberWithInt:35], [NSNumber numberWithInt:267], nil],[NSArray arrayWithObjects:[NSNumber numberWithInt:4], [NSNumber numberWithInt:24], [NSNumber numberWithInt:531], nil],[NSArray arrayWithObjects:[NSNumber numberWithInt:1], [NSNumber numberWithInt:38], [NSNumber numberWithInt:892], nil],[NSArray arrayWithObjects:[NSNumber numberWithInt:12], [NSNumber numberWithInt:18], [NSNumber numberWithInt:825], nil],[NSArray arrayWithObjects:[NSNumber numberWithInt:25], [NSNumber numberWithInt:32], [NSNumber numberWithInt:99], nil],[NSArray arrayWithObjects:[NSNumber numberWithInt:3], [NSNumber numberWithInt:39], [NSNumber numberWithInt:107], nil],[NSArray arrayWithObjects:[NSNumber numberWithInt:12], [NSNumber numberWithInt:37], [NSNumber numberWithInt:131], nil],[NSArray arrayWithObjects:[NSNumber numberWithInt:3], [NSNumber numberWithInt:26], [NSNumber numberWithInt:640], nil],[NSArray arrayWithObjects:[NSNumber numberWithInt:8], [NSNumber numberWithInt:39], [NSNumber numberWithInt:483], nil],[NSArray arrayWithObjects:[NSNumber numberWithInt:8], [NSNumber numberWithInt:11], [NSNumber numberWithInt:194], nil]",operationsScala:"Array(29, 40, 787), Array(9, 26, 219), Array(21, 31, 214), Array(8, 22, 719), Array(15, 23, 102), Array(11, 24, 83), Array(14, 22, 321), Array(5, 22, 300), Array(11, 30, 832), Array(5, 25, 29),Array(16, 24, 577), Array(3, 10, 905), Array(15, 22, 335), Array(29, 35, 254), Array(9, 20, 20), Array(33, 34, 351), Array(30, 38, 564), Array(11, 31, 969), Array(3, 32, 11), Array(29, 35, 267),Array(4, 24, 531), Array(1, 38, 892), Array(12, 18, 825), Array(25, 32, 99), Array(3, 39, 107), Array(12, 37, 131), Array(3, 26, 640), Array(8, 39, 483), Array(8, 11, 194), Array(12, 37, 502)",operationsPhp:"array(29, 40, 787), array(9, 26, 219), array(21, 31, 214), array(8, 22, 719), array(15, 23, 102), array(11, 24, 83), array(14, 22, 321), array(5, 22, 300), array(11, 30, 832), array(5, 25, 29),array(16, 24, 577), array(3, 10, 905), array(15, 22, 335), array(29, 35, 254), array(9, 20, 20), array(33, 34, 351), array(30, 38, 564), array(11, 31, 969), array(3, 32, 11), array(29, 35, 267),array(4, 24, 531), array(1, 38, 892), array(12, 18, 825), array(25, 32, 99), array(3, 39, 107), array(12, 37, 131), array(3, 26, 640), array(8, 39, 483), array(8, 11, 194), array(12, 37, 502)",operationsCpp:"{{29, 40, 787}, {9, 26, 219}, {21, 31, 214}, {8, 22, 719}, {15, 23, 102}, {11, 24, 83}, {14, 22, 321}, {5, 22, 300}, {11, 30, 832}, {5, 25, 29},{16, 24, 577}, {3, 10, 905}, {15, 22, 335}, {29, 35, 254}, {9, 20, 20}, {33, 34, 351}, {30, 38, 564}, {11, 31, 969}, {3, 32, 11}, {29, 35, 267},{4, 24, 531}, {1, 38, 892}, {12, 18, 825}, {25, 32, 99}, {3, 39, 107}, {12, 37, 131}, {3, 26, 640}, {8, 39, 483}, {8, 11, 194}, {12, 37, 502}}"}}}},E={LOGIN_FACEBOOK:"login with facebook",SIGNUP_FACEBOOK:"signup with facebook",LOGIN_GOOGLE:"login with google",SIGNUP_GOOGLE:"signup with google",LOGIN_EMAIL:"login with email",SIGNUP_EMAIL:"signup with email",LOGOUT:"logout"},S=t(157),N={FRONTEND:["React","Other"],BACKEND:["PHP (Laravel)","Node.js","Python (Django)","C# (ASP.NET)","Ruby (Rails)","Other"],MOBILE:["Java","Kotlin","Objective-C","Swift","React Native","Other"],DEVOPS:["C++","Javascript","Python","Java","Other"],BACKEND_TEMPLATES:[{language:"NodeJS",title:"NodeJS Back End Template",link:"https://github.com/TuringCom/backend_challenge_template"},{language:"PHP Laravel",title:"Laravel Back End Template",link:"https://github.com/TuringCom/php_laravel_challenge_template"},{language:"Python Django",title:"Django Back End Template",link:"https://github.com/TuringCom/python_django_challenge_template"},{language:"ASP.NET",title:"ASP.net Back End Template",link:"https://github.com/TuringCom/asp.net_backend_challenge_template"},{language:"Ruby on Rails",title:"Ruby on Rails Back End Template",link:"https://github.com/TuringCom/ruby-rails-challenge-template"}],FRONTEND_TEMPLATES:[{language:"React",title:"React Front End Template",link:"https://github.com/TuringCom/frontend-challenge-template-2"}],AUTOMATED_HOSTING_MESSAGE:"To help save you time, we offer the ability to host your project in an automated fashion.\n                              To use this feature, submit your project by filling in the form below.\n                              If you built your project using one of our challenge templates, then your project is already set up to be automatically hosted by us upon submission and you do not need to do anything extra.\n                              If you wish to have us host a custom solution that you built, then your project must contain an appropriate Dockerfile and entrypoint shell script.\n                              For your custom solution to be hosted properly, please run and expose your app on Port 80"},m={INPROGESS:0,SUCCESS:1,FAILED:2},I=t(164),p=t(155),h={NOT_STARTED:0,RUNNING:1,FINISHED:2},A={CHALLENGE:"CHALLENGE",UIUX:"UIUX"};t(203).config();var b={LOGGING_SESSION_TIMEOUT:"10",LOGGING_SESSION_TIMEOUT_UNIT:"M"}},99:function(n,e,t){"use strict";var r,a=t(57),i=t.n(a),o=t(156),s=["s","n","ref","email","tempId","utm","utm_source","utm_medium","token"],l=function(n,e){var t=i.a.parse(n.location.search);if(t){var r={};s.map((function(n){var e=t[n];e&&(r[n]=e)})),e&&e.search&&Object.assign(r,i.a.parse(e.search)),e&&(e.search=i.a.stringify(r))}return e},u=function(n,e){return"string"===typeof n?{pathname:n,state:e}:n},c=(r=o.a,function(n){var e=r(n),t=e.push,a=e.replace;return e.push=function(n,r){return t.apply(e,n&&n.includes&&n.includes("redirect")?[n]:[l(e,u(n,r))])},e.replace=function(n,t){return a.apply(e,n&&n.includes&&n.includes("redirect")?[n]:[l(e,u(n,t))])},e})();e.a=c}},[[246,31,4,6,25,28,27,29,42]]]);